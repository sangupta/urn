<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sangupta</groupId>
	<artifactId>urn</artifactId>
	<version>0.1.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>urn</name>
	<description>Object storage library</description>
	<url>http://sangupta.com/projects/urn</url>
	<inceptionYear>2016</inceptionYear>
	
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<scm>
	    <connection>scm:git:ssh://git@github.com/sangupta/urn.git</connection>
	    <developerConnection>scm:git:ssh://git@github.com/sangupta/urn.git</developerConnection>
	    <url>https://github.com/sangupta/urn</url>
	  <tag>HEAD</tag>
  	</scm>
	
	<developers>
		<developer>
			<id>sangupta</id>
			<name>Sandeep Gupta</name>
			<email>sandy.pec@gmail.com</email>
			<url>http://sangupta.com</url>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <build.number />
	</properties>
	
	<prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>
    
    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.sangupta</groupId>
			<artifactId>jerry-core</artifactId>
			<version>2.4.0</version>
		</dependency>
		
		<!-- for mongodb based implementations -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>1.8.2.RELEASE</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>com.github.fakemongo</groupId>
		    <artifactId>fongo</artifactId>
		    <version>1.6.5</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- for redis based implementation -->
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-redis</artifactId>
		    <version>1.6.2.RELEASE</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.github.sangupta</groupId>
			<artifactId>dryrun</artifactId>
			<version>-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.github.sangupta</groupId>
            <artifactId>dry-redis</artifactId>
            <version>-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.5</version>
            <scope>provided</scope>
		</dependency>
		
		<!-- for Amazon S3 based implementation -->
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk-s3</artifactId>
		    <version>1.10.51</version>
            <scope>provided</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			
			<!-- Report the coverage to coveralls -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<format>xml</format>
					<maxmem>256m</maxmem>
					<aggregate>true</aggregate>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>3.2.1</version>
			</plugin>
			
			<!-- Generate the project-javadoc.jar for OSS repository -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<detectOfflineLinks>false</detectOfflineLinks>
					<breakiterator>true</breakiterator>
					<version>false</version>
					<author>false</author>
					<keywords>true</keywords>
				</configuration>
			</plugin>

			<!-- Generate the project-sources.jar for OSS repository -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
				<executions>
					<!-- ~ This workaround prevents Maven from executing the 'generate-sources' 
						phase twice. ~ See http://jira.codehaus.org/browse/MSOURCES-13 ~ and http://blog.peterlynch.ca/2010/05/maven-how-to-prevent-generate-sources.html -->
					<execution>
						<id>attach-sources</id>
						<phase>invalid</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-sources-no-fork</id>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
            </plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>release</id>	
			<build>
				<plugins>
					<!-- Sign the Maven artifacts -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>			
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
